<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0822.2038                               -->
<workbook original-version='18.1' source-build='2021.3.0 (20213.21.0822.2038)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (T1)' inline='true' name='federated.10zr4zk1l9qu9h1cxfcoy0jpk491' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='1' name='excel-direct.0bmuqkm1ho35au1dmcxef1kwz0gr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/PROJECT/COVID portfolio project/1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0bmuqkm1ho35au1dmcxef1kwz0gr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0bmuqkm1ho35au1dmcxef1kwz0gr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F21B7C97EDD94350B8E75C17C3FA8DFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F21B7C97EDD94350B8E75C17C3FA8DFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F21B7C97EDD94350B8E75C17C3FA8DFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F21B7C97EDD94350B8E75C17C3FA8DFC]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F21B7C97EDD94350B8E75C17C3FA8DFC'>
            <properties context=''>
              <relation connection='excel-direct.0bmuqkm1ho35au1dmcxef1kwz0gr' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (T2)' inline='true' name='federated.0swfuj40lka7431fs99en18fo0as' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2' name='excel-direct.1mzntdq0y27e8l1afmq301gvtrxa'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/PROJECT/COVID portfolio project/2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mzntdq0y27e8l1afmq301gvtrxa' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1mzntdq0y27e8l1afmq301gvtrxa' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2EB84B30F1D4480C9C9CBF053C627A9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2EB84B30F1D4480C9C9CBF053C627A9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2EB84B30F1D4480C9C9CBF053C627A9B]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c04f23'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2EB84B30F1D4480C9C9CBF053C627A9B'>
            <properties context=''>
              <relation connection='excel-direct.1mzntdq0y27e8l1afmq301gvtrxa' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (T3)' inline='true' name='federated.066zio81prfrhl11nmomg1yy1c1l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='3' name='excel-direct.1hig01z0sytgg3123ac2801tepy5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/PROJECT/COVID portfolio project/3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1hig01z0sytgg3123ac2801tepy5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D234:no:A1:D234:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1hig01z0sytgg3123ac2801tepy5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D234:no:A1:D234:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D234:no:A1:D234:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_410EB71A9B344341859AE2213ACAEAC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_410EB71A9B344341859AE2213ACAEAC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_410EB71A9B344341859AE2213ACAEAC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_410EB71A9B344341859AE2213ACAEAC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_410EB71A9B344341859AE2213ACAEAC7]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_410EB71A9B344341859AE2213ACAEAC7'>
            <properties context=''>
              <relation connection='excel-direct.1hig01z0sytgg3123ac2801tepy5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D234:no:A1:D234:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (T4)' inline='true' name='federated.1dg3vnq1aei9th1blyj8q1iemkww' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='4' name='excel-direct.0m9eeb51663m5c1crt78k1qzi3m3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/PROJECT/COVID portfolio project/4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0m9eeb51663m5c1crt78k1qzi3m3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0m9eeb51663m5c1crt78k1qzi3m3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0257A8D126A54E559268FC0CEE5577DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0257A8D126A54E559268FC0CEE5577DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0257A8D126A54E559268FC0CEE5577DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0257A8D126A54E559268FC0CEE5577DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0257A8D126A54E559268FC0CEE5577DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0257A8D126A54E559268FC0CEE5577DF]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0257A8D126A54E559268FC0CEE5577DF'>
            <properties context=''>
              <relation connection='excel-direct.0m9eeb51663m5c1crt78k1qzi3m3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (T2)' name='federated.0swfuj40lka7431fs99en18fo0as' />
          </datasources>
          <datasource-dependencies datasource='federated.0swfuj40lka7431fs99en18fo0as'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]' direction='DESC' using='[federated.0swfuj40lka7431fs99en18fo0as].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0swfuj40lka7431fs99en18fo0as].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='1000000' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='91' />
                <format attr='maxheight' value='91' />
                <format attr='minwidth' value='360' />
                <format attr='maxwidth' value='360' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0swfuj40lka7431fs99en18fo0as].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{B75C4197-6E31-4BD5-AE95-E119E1FCEE90}' />
    </worksheet>
    <worksheet name='line graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (T4)' name='federated.1dg3vnq1aei9th1blyj8q1iemkww' />
          </datasources>
          <datasource-dependencies datasource='federated.1dg3vnq1aei9th1blyj8q1iemkww'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dg3vnq1aei9th1blyj8q1iemkww].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]' />
              <color column='[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Forecast Indicator:nk]' />
              <text column='[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dg3vnq1aei9th1blyj8q1iemkww].[fVal:sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1dg3vnq1aei9th1blyj8q1iemkww].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{B69B67A5-DC23-42AB-BD70-FD34C6876888}' />
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (T3)' name='federated.066zio81prfrhl11nmomg1yy1c1l' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.066zio81prfrhl11nmomg1yy1c1l'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.066zio81prfrhl11nmomg1yy1c1l].[Longitude (generated)]' field-type='quantitative' max='52746513.983063467' min='25374739.011512075' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.066zio81prfrhl11nmomg1yy1c1l].[Latitude (generated)]' field-type='quantitative' max='12251615.827444695' min='-7627080.0793789001' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.066zio81prfrhl11nmomg1yy1c1l].[none:Location:nk]' value='center' />
            <format attr='text-orientation' field='[federated.066zio81prfrhl11nmomg1yy1c1l].[none:Location:nk]' value='90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.066zio81prfrhl11nmomg1yy1c1l].[sum:PercentPopulationInfected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.066zio81prfrhl11nmomg1yy1c1l].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.066zio81prfrhl11nmomg1yy1c1l].[none:Location:nk]' />
              <geometry column='[federated.066zio81prfrhl11nmomg1yy1c1l].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.066zio81prfrhl11nmomg1yy1c1l].[Latitude (generated)]</rows>
        <cols>[federated.066zio81prfrhl11nmomg1yy1c1l].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C5421607-9B99-4FC1-A7B1-326BB1C50369}' />
    </worksheet>
    <worksheet name='table'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (T1)' name='federated.10zr4zk1l9qu9h1cxfcoy0jpk491' />
          </datasources>
          <datasource-dependencies datasource='federated.10zr4zk1l9qu9h1cxfcoy0jpk491'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[:Measure Names]' value='117' />
            <format attr='height' value='40' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[sum:DeathPercentage:qk]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#37c1dc' />
            <format attr='background-color' data-class='subtotal' value='#000000' />
            <format attr='background-color' data-class='total' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AF18DB80-FB07-433F-9825-21E9718D6A67}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='6' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='table' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33000' id='9' name='line graph' w='81700' x='900' y='65000' />
        <zone h='27750' id='10' name='line graph' pane-specification-id='0' param='[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]&#10;[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Forecast Indicator:nk]' type-v2='color' w='14000' x='83100' y='67750' />
        <zone h='62750' id='11' name='map' w='62200' x='36600' y='125' />
        <zone h='42750' id='12' name='bar' w='33300' x='1600' y='18875' />
        <zone h='18500' id='13' name='bar' pane-specification-id='0' param='[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]' type-v2='color' w='14000' x='34900' y='28375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='16' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='62750' id='11' is-fixed='true' name='map' w='62200' x='36600' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='table' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42750' id='12' is-fixed='true' name='bar' w='33300' x='1600' y='18875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18500' id='13' name='bar' pane-specification-id='0' param='[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]' type-v2='color' w='14000' x='34900' y='28375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='33000' id='9' is-fixed='true' name='line graph' w='81700' x='900' y='65000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27750' id='10' name='line graph' pane-specification-id='0' param='[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]&#10;[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Forecast Indicator:nk]' type-v2='color' w='14000' x='83100' y='67750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{916D81EB-9DF8-4E73-8930-0FDED9E35816}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10zr4zk1l9qu9h1cxfcoy0jpk491].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27CB1BC7-CB54-42C1-966B-001D704C287B}' />
    </window>
    <window class='worksheet' name='bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CF9BE2A-B5AD-4EF1-BCEB-645190A51FA3}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.066zio81prfrhl11nmomg1yy1c1l].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.066zio81prfrhl11nmomg1yy1c1l].[none:Location:nk]</field>
            <field>[federated.066zio81prfrhl11nmomg1yy1c1l].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{DB885EE7-8C0C-470D-908D-78838C119649}' />
    </window>
    <window class='worksheet' name='line graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]&#10;[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Forecast Indicator:nk]</field>
            <field>[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]</field>
            <field>[federated.1dg3vnq1aei9th1blyj8q1iemkww].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9071134-F6FF-4A4E-B7B2-63697412DDBC}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='bar'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0swfuj40lka7431fs99en18fo0as].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='line graph'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Forecast Indicator:nk]</field>
              <field>[federated.1dg3vnq1aei9th1blyj8q1iemkww].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='table' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6142A954-3E84-49FE-B436-23F94706A9C2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='155' name='bar' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='line graph' width='192'>
      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
      AZCG2v8DNp3JkwNfuLgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      Bv5/2Pk515aKvFUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='84' name='table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABUCAYAAADUKzhSAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQOUlEQVR4nO2deVQUV77HP1XdHVxQCEZAE3fEqASCC6ISJ0YTNOrBZYIL4/O5jDoa9SAm
      mKgBPWYUR43RESEYJ2qiqPNM8OFEn3GNgms8En0xuCCOYMAnsorYdNX7owEl0DS2EIh1P+d4
      wHt/t+6v6ne/dX91q7ktqaqqIhBoFLmuHRAI6hIhAIGmEQIQaBohAIGmEQIQaBohAIGmEQIQ
      aBq9NQPfY9d+Cz8EgjpBzAACTSMEINA0QgACTSMEINA0QgACTSMEINA0QgACTSMEINA0QgAC
      TSMEINA0QgACTSMEINA0QgACTSMEINA0QgACTSMEINA0QgACTSMEINA0QgACTSMEINA0QgAC
      TSMEINA0QgACTWN1X6C6Rj0YimnvDQu1bZHnRyA717ITmXGYlm+DSTvQeViwMeWgJmxBOXAG
      Nb8IGrZE8glCDuiBVMvu1R/SUVYGo6RbqG45Dt28gFq/HuYx0xrd6pm/6quif/VeANKACPQD
      zL9bPrHqcBbT3L/BkE/QDWhZw16mo2wMR8noijzzM3QuDaAoDeXrRKBHDfdVn2mJPG9HSVpR
      Mthavod+nA3X4OJ6ijfdrJ0bXI9Sn4wiBaoRzn6F8vPzyNPnILs0MJfZvYg85o8auvv/HjHU
      /xmg2uT9hLLrM5Sf0sFkBx2HovvTKKQmupK7yTGz3d5givfCo/SpEDVhI8qB86g5BYAenL2R
      x0xHbmtfjY6zUU6fha7vVnGnqkYf95NRYjeU+K8H587Ig6chezU315vuoO7+FNO5K/DQhvb1
      ChNcj8e0Mw41swCec0H6wyR0b70KOlC3jcZ01mypLB+NAo/SpwfXUP75D5SfUqCwGHSNoXMA
      ujEBSI2e3JNnQwCmSygrl6C0nY7ur/2RyELZNR/Tyix0H0xH8piJfnUvCylQLuS1Rv7zJKSW
      jcFobqtsjEVaPAVJZ63zq6hXQRrSoQob632o+yJQsgahWzoSyU6B9DOYDp1F9RqMRCHqrgWY
      sgLQLV6MZKegJq7BtH41LPgI2dFa+3rG1S0URyYijf4r+l6ukJOAafUyinPmox/jjTRuB3pP
      CylQwR1oMQLdSE+kRoaStp9i+ld79H985YldeTZSoFP/hXLfB3lsfyQDYHBCHj0V6f5hlB+y
      rTR2QfIPMA9MStr69Yf7V1Dv1pSD1ejjQT40fQHJTgcYoGUfdH8qGby5x1FON0UeOaSsXuo9
      ErnpJdT/zbbevl6RjfI/++CVCeh6uZqLHPqge6cfnP5vlFwrzZv5Ig/obh78JW1ln+Zw4zq2
      fNvjMzEDqDd/BpdApAaPFepaIrmAcuMq9LHyEHZjH6a4ONRbWWAqLWxbs05a6UPyHgiboij+
      +ASS7wDkHj2QHEqCnHYNlX+jrihJBx5DKrwPOFbdvl6RgpoC0qB25YudX0LiGOpNwNJKGwD5
      qN//A+VQaTpZgo3rGs+EAJ6K7AOY1m+F1z9AN8PDPINkxmFanlDNA7ghuYFy4xoWo1CdPjr/
      Gf3SEag/nUBJ3I5p79/BJxj9mB5gMgGtkN9fiexqwY2q2j9DqAmrMe15gDx1JbqOTuayg6GY
      ztt2vGciBZJad4KMq6gPHit8kIKaAVJbt6ob30pGNfkgDyoZmE+MI9KrXeFSPErmU/Zh9wLS
      qwHo/rIW/QQfOL0b5S7Qog0S/0a9YiUns9S+XtEOqR2oN1PKF9+6ikpXpNZWmt+4BJ4ByCWD
      /2l5JgRAr1HIjU6jbD+MasT8kLl7M2qj/sjdHEuMzHdqNemk2cZkNKcizzcHklCScgAjpCdg
      +jLuifJJqc8U5La3UaI+RckoUeH9myix/zQfx2of6ShfrkO58n8l6ZERtRigARiAZq8jddWj
      7lmFciXL3MRYgHppJ8qZDOvt6xWOyG8Ngh83Yzr1i7koJwFT3GnwGYbctMSstTsSt1AvpJr/
      bzSafzq5ws8nUfJM5mtwPgbl0C0bfTE+IymQrivyvHDY9RmmD6MeLYPOG/XYc4Ej8pi5qF9E
      YwrdAc91QX4vDPnFt9G99ROmbVMp3tYYySsQeWQAytrqpkAALZFnrkM6EoOyfirFj70JlgCs
      9uGC1KM1yr8+pDg1x1xk3xFpwpySAWGP/J9rkHZ/iunzv6A8BBo6IXUehPz2CwBW2tcz3P4D
      /btOmHZ+SPGO0mXQD9C/9eojm6ZvIE+4gbLzQ4q/LYYOk9HNfAup30zka8tRwsahNGyPNGgi
      8htXnywFOvs3ikuWWSVVVau82YmvSBI8yzwbKZBAYCNCAAJNIwQg0DRCAAJNY3UV6O+N7v0W
      fggEdYJVATRs2PC38EMgqBNECiTQNEIAAk0jBCDQNEIAAk0jBCDQNEIAAk0jBCDQNEIAAk0j
      BCDQNEIAAk0jBCDQNEIAAk3zVAJQFIWEhARGjx6Nt7c3Hh4evPHGG3z++ec8ePCggm1cXBxD
      hw7F09MTT09P3n77beLi4lCUX+9284jU1FT8/f3x9fXlwoULT+Rfamoq8+bNY/z48eTn51dq
      s3btWjw8PCr8s9Sf0Wjkm2++YcCAAezfv/+J/AHzdfj+++8ZMWIEkZGRFu3S0tIIDQ3F19cX
      Dw8PunfvTmhoKGlpaeXs8vLyGDt2bKXnEBQUZPG86xJbY1pQUMCyZcvo27dvWYxCQ0PJyMgo
      Z5eXl8eyZcvo168f3t7eTJ48mcuXL1d6TJv/KD4/P58FCxaQnp7O3Llz6datGwaDgStXrrBo
      0SKuX7/O4sWL0ev1ZGRkEBwcjL29PREREbi7u6PT6Th16hTh4eHcvn2b6dOnV+hDURQ2b95M
      nz59+OGHH6rtW2pqKuvWrePs2bP4+flhMFS+NYKiKGV+jho1qspjGo1G9u7dS2RkJB06dKBZ
      s2bV9qe0rxMnTvDJJ5+g1+txdbW0wQ9s2bKFL774gsmTJxMaGoqTkxP37t0jMjKSadOmER0d
      zYsvvghAbm4uJpOJ+Ph42rZt+0Q+1QW2xjQ3N5dZs2bx0ksv8fXXX+Ps7ExOTg7x8fFcv34d
      FxcXAI4cOcKSJUsYNmwYO3fupEmTJsTGxjJ9+nTWrl2Lp6cn8CieNs8ABQUF9OrVi6+++ore
      vXtjZ2eHLMt06tSJ8PBwfvzxR27dMm9XcffuXcaNG0dUVBRdu3bFYDAgyzK9e/cmNDSUQ4cO
      kZ1dcQvDU6dOceXKFQIDA6vtV35+PmvXrsXPz48DBw7wzjvvoNdXrvOCggKys7PLBlNVHD16
      lOPHjxMTE8OGDRto1apVtX0CuHjxIrGxsSxdupTY2FheeaXyfSwVRUFVVbZv305QUBBOTub9
      b55//nnmzp1L8+bNOXnyZJl9RkYGdnZ2ODo6Vnq8+oYtMQWIiYmhRYsWhIWF4exs3izUwcGB
      oKAgevfuXWaXnZ3Nhg0bCA4OxtXVlcaNGzNx4kRee+01vv322zK70njaPAO4uLgwbty4Susc
      HByQJIm8vDwAunTpQpcuXSq1dXR0xGg08vDhw3Llubm5REdHM3ny5LJBUB3s7e1ZtWpVtWxz
      c3O5f/9+lXfjUgYOHMjAgQOr7cev8fT0ZP369VbtZFlmwoQJldbZ2dnh4ODA3buPdru6ffs2
      TZo0wd6+OjtZ1y22xjQzM5Nz586xcOFCnnvuuSpthw8fXqFMlmWaN29eLn0sjWetPAQnJCRg
      Z2dH69ZVb/OlKAoHDx6kVatWFS7Itm3bcHV1xc/PrzZcBH5/d8/U1FSSk5Px9vYuK7t27Rpt
      2rSxOMvVJ2yN6eXLlzEYDFbHkyXu3bvH8ePH8fX1rVBXo1dNURQ2bdrEl19+yerVq3FwcLBo
      ++DBA1asWMGpU6eIiooqF8CUlBQOHTpERERErQY2KyuLCxculAVElmWcnZ0ZO3YsQUFBNGjQ
      wMoRfjvOnz/Pe++9x8iRI+nevXtZeVpaGnv37mXr1q0AGAwG3N3dmTNnDr6+vshy/Vjoe5qY
      pqam4uDgwIkTJ9i0aRPJyckYjUacnZ2ZNWsWAQEBFs/z5s2bBAcH07FjR4YMGVKh/qlHl6Io
      HDt2jI8++oiePXsSHh7OlClTLNru2LGDNWvWMGbMGN5///0Kg2zfvn3ExsayceNGmjat3W3N
      Bg4cSFJSUoXy3NxcJk2axODBgxk/fnyt+lAVaWlpzJ8/n7t377Jy5Uq+++67CjYRERFERERU
      KD937hyDBw9m3bp1uLu7/xbuWuRpY5qXl4fBYMDf3x9/f/9ydYmJiQwfPpzo6GhatGhRrk14
      eDjDhg1j165dFgXyVAIofaLftGkTCxcu5M0337TY0cOHD4mIiODo0aNERUWVm8ZLuXfvHlu2
      bGHq1Km1PviromnTpvj6+nLx4sU68yEpKYm5c+fSr18/YmJinng2cnd3p1mzZty8ebNOBVAT
      Me3QoQMnT56koKCAxo0bl6tr3749kiSRmZlZJoD09HRmzZqFi4sLr7/+epXHfioBHDt2jM2b
      N7N69Wp69uxZpe327ds5efIkMTExtGvXrlKb06dPk5SUxLvvvltpfVBQEACrVq2qcCeoDeoq
      Bbpz5w6LFi0iICCAmTNn2pzG6HQ6qw+NtU1NxLRdu3ZkZWWRlpZmVcyFhYWEhYXh5ubG4sWL
      rfpnswAKCwvZvHkzEyZMsDr4MzMz2b17NyEhIRYHP1DpFAfmh9WpU6eyZMkSvLy8bHW5HEVF
      RZw/fx4fH58KA6z0oWnSpEk10teTEh8fj5OTE1OmTKly8KelpZGfn0+nTp0q1F28eJGcnBw6
      duxYm65apSZi2r59e9q3b09cXBwhISHlrsmlS5fQ6/Vly9KJiYlkZmby8ccfV+sGZvMT0tWr
      V7lz5w79+/e3apuUlITBYKBbt262dlcpOTk5BAYGEhoaalP7rVu3EhgYSGJiIkVFRSiKQkpK
      CrNnz6ZJkyY2r0CdOXMGHx+fSnN2axQUFHD48GGGDh1qdUuawsJCZsyYwYIFC7hx4waKomA0
      Gjl48CDz589n2LBh5fLi3wOVxVSv1zN79myOHj3K+vXrKSgoQFEUjhw5wooVK5g4cWLZKuL+
      /fvp06dP2bsCa9g8AxiNRu7cucPQoUMrrbe3tyc6OhovLy+Kioq4fPmyxQHl4uLCtm3byt7m
      VZdz587xyy+/sHDhwrKyCxcuMG3atAofAXh8Cax0ul23bh0nTpxgzZo15VYWgoKCKqwChYSE
      VPjow/79+wkJCQHAy8uL6OhoGjVqxJ49e+jcuXO5PiMjIyv96ENpWek1aNSoEUajkbCwMMLC
      wio97xkzZjBjxgzc3NzYs2cP27dvZ8qUKWRmmr+h4+WXX2bZsmWVLvvVdyqLKYCbmxvR0dEs
      X74cPz8/TCYTbdq0YcGCBfTt2xcwP5MWFRWxdevWslWxx/H39y97R1QaT6vbo1+6dKmmzq1G
      KS4uJiQkhM6dO1f6MYq6IjU1lTlz5rBkyZKy1+6C6lEXMa0fi8Q2kJycjMFgsPjWtK44fPgw
      I0aMEIPfBuoipr/bGUAgqAl+tzOAQFATCAEINI0QgEDTCAEINI0QgEDTCAEINI0QgEDT/D8b
      f6eSXc+2bgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
